% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/any_raster_downloader.R
\name{download_esri_raster}
\alias{download_esri_raster}
\title{Download Raster Data from an ESRI REST Image Service}
\usage{
download_esri_raster(
  aoi,
  base_url,
  output_path = "esri_rest_output.tif",
  max_tile_size = 20000,
  pixel_size = 30,
  target_crs = 3857,
  mask = TRUE,
  quiet = FALSE
)
}
\arguments{
\item{aoi}{An \code{sf} or \code{sfc} object representing the area-of-interest.}

\item{base_url}{A character string with the URL of the ESRI REST image service (e.g.,
\code{"https://di-usfsdata.img.arcgis.com/arcgis/rest/services/CONUS_site_productivity_2018_masked_202106032103033/ImageServer/exportImage"}).}

\item{output_path}{A character string specifying the file path for the output raster (GeoTIFF). Default is \code{"esri_rest_output.tif"}.}

\item{max_tile_size}{Integer specifying the maximum size (in pixels) of each downloaded tile. Default is \code{20000}.}

\item{pixel_size}{Numeric value for the size of one pixel in map units (e.g., \code{30} for a 30 Ã— 30 m raster). Default is \code{30}.}

\item{target_crs}{An integer or character specifying the EPSG code or CRS for the AOI and output raster. Default is \code{3857} (Esri Web Mercator).}

\item{mask}{Logical; if \code{TRUE}, the merged raster will be masked to the AOI boundary. Default is \code{TRUE}.}

\item{quiet}{Logical; if \code{TRUE}, suppresses progress messages. Default is \code{FALSE}.}
}
\value{
A \code{SpatRaster} object representing the merged (and optionally masked) raster. The final raster is also saved to \code{output_path}.
}
\description{
This function downloads raster data from an ESRI REST image service for a specified area-of-interest (AOI).
The AOI should be provided as an \code{sf} or \code{sfc} object. The function divides the AOI into tiles (if needed),
downloads each tile using the ESRI REST API, merges the tiles into a single raster, and optionally masks the output
raster to the AOI boundary.
}
\details{
The function works by first transforming the AOI to the specified CRS, calculating the bounding box and total pixel dimensions
based on the provided \code{pixel_size}, and then dividing the area into smaller tiles. For each tile, it constructs a query with parameters
(including bounding box, image size, spatial reference, etc.) and downloads the tile using the ESRI REST API. After downloading, it merges the
tiles and (if requested) masks the merged raster to the AOI.
}
\examples{
\dontrun{
library(sf)

# Define a sample AOI as a bounding box polygon
aoi <- st_as_sfc(st_bbox(c(xmin = -100, ymin = 40, xmax = -99, ymax = 41), crs = st_crs(4326)))

# Download the raster from an ESRI REST image service
raster <- download_esri_raster(aoi,
                               base_url = "https://di-usfsdata.img.arcgis.com/arcgis/rest/services/CONUS_site_productivity_2018_masked_202106032103033/ImageServer/exportImage",
                               output_path = "conus_productivity.tif")
}

}
